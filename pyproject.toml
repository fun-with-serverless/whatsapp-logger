[tool.poetry]
name = "WhatsApp-Logger"
version = "0.1.0"
description = "Serverless Backend"
authors = ["Efi MK"]

[tool.poe.tasks]
black = "black ."
black_ci = "black --check ."
lint = "ruff --fix ."
lint_ci = "ruff ."
pytest = "pytest"
mypy = "mypy ."
deploy = {shell = "cdk deploy --all --concurrency 2 --method=direct && cd static_web/iac && cdk deploy --all --method=direct && cd ../.."}
destroy = {shell = "cd static_web/iac && cdk destroy --all --force && cd ../.. && cdk destroy --all --force"}
client_gate = {shell = "cd whatsapp_web_listener && npm run gate && cd .."}
cdk_synth = {shell = "cdk synth --all"}
gate = ["black", "lint", "pytest", "mypy", "client_gate"]
bandit = "bandit -r backend/src"
gate_ci = ["black_ci", "lint_ci", "pytest", "mypy", "client_gate", "bandit", "cdk_synth"]

[tool.ruff]
# Never enforce `E501` (line length violations).
ignore = ["E501"]
exclude = [
"cdk.out"
]

[tool.black]
extend-exclude = '''

(
    cdk\.out 
)
'''
[tool.mypy]
exclude = [
"cdk.out"
]

[tool.pytest.ini_options]
addopts = "--ignore=cdk.out --cov=backend.src --cov-report xml:coverage.xml  --cov-report term"
markers = [
    "data_date",
]
[tool.bandit]
exclude_dirs = ["tests"]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.layer.dependencies]
boto3 = "^1.26.59"
dacite = "^1.8.0"
pynamodb = "^5.4.0"
aws-lambda-powertools = "^2.14.0"
gspread = "^5.7.2"
openai = "^0.27.0"


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
ruff = "^0.0.241"
pytest = "^7.2.1"
moto = "^4.1.2"
pyyaml = "^6.0"
mypy = "^1.0.0"
boto3-stubs = {extras = ["essential"], version = "^1.26.80"}
ipython = "^8.10.0"
aws-cdk-lib = "^2.65.0"
aws-cdk-aws-lambda-python-alpha = "^2.65.0a0"
aws-solutions-constructs-aws-cloudfront-s3 = "^2.32.0"
coverage = "^7.2.0"
pytest-cov = "^4.0.0"
aws-cdk-aws-kinesisfirehose-alpha = "^2.66.1a0"
aws-cdk-aws-kinesisfirehose-destinations-alpha = "^2.66.1a0"
bandit = "^1.7.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
